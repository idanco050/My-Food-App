{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IdanC\\\\Documents\\\\React\\\\meal-app\\\\src\\\\components\\\\MealForm.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useContext, useRef } from 'react';\nimport classes from './MealItemForm.module.css';\nimport CartContext from './CartContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MealForm = props => {\n  _s();\n  const {\n    cart,\n    addItem,\n    setCart\n  } = useContext(CartContext);\n  const amountInput = useRef();\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (amountInput.current.value !== \"0\") {\n      let sameItem = false;\n      cart.map(item => {\n        if (item.data.name === props.data.name) {\n          sameItem = true;\n          return;\n        }\n        return;\n      });\n      if (sameItem) {\n        let newCart = cart.map(item => {\n          if (item.data.name === props.data.name) {\n            let data = {\n              id: props.data.id,\n              name: props.data.name,\n              description: props.data.description,\n              price: item.data.price + props.data.price * parseInt(amountInput.current.value)\n            };\n            return {\n              data: props.data,\n              amount: parseInt(amountInput.current.value) + item.amount\n            };\n          } else {\n            return item;\n          }\n        });\n        setCart(newCart);\n      } else {\n        addItem({\n          data: props.data,\n          amount: parseInt(amountInput.current.value)\n        });\n      }\n      amountInput.current.value = \"\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.form,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: props.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"amount\",\n          ref: amountInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button,\n          type: \"submit\",\n          children: props.btnLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(MealForm, \"H+EFiyk23Trcoj7MEgj3D1jUkb8=\");\n_c = MealForm;\nexport default MealForm;\nvar _c;\n$RefreshReg$(_c, \"MealForm\");","map":{"version":3,"names":["Fragment","useContext","useRef","classes","CartContext","MealForm","props","cart","addItem","setCart","amountInput","handleSubmit","event","preventDefault","current","value","sameItem","map","item","data","name","newCart","id","description","price","parseInt","amount","form","label","button","btnLabel"],"sources":["C:/Users/IdanC/Documents/React/meal-app/src/components/MealForm.js"],"sourcesContent":["import {Fragment ,useContext , useRef } from 'react'\r\nimport classes from './MealItemForm.module.css'\r\nimport CartContext from './CartContext'\r\nconst MealForm = props =>\r\n{\r\n    \r\n    const {cart,addItem,setCart} = useContext(CartContext);\r\n    const amountInput = useRef();\r\n\r\n    const handleSubmit = (event) =>\r\n    {\r\n        event.preventDefault();\r\n        if(amountInput.current.value !== \"0\")\r\n        {\r\n            let sameItem = false;\r\n\r\n            cart.map((item) =>\r\n            {\r\n                if(item.data.name === props.data.name)\r\n                {\r\n                    sameItem = true;\r\n                    return;\r\n                }\r\n                return;\r\n            });\r\n            if(sameItem)\r\n            {\r\n                let newCart = cart.map((item) =>{\r\n                    if(item.data.name === props.data.name)\r\n                    {\r\n                        let data ={\r\n                            id: props.data.id,\r\n                            name: props.data.name,\r\n                            description:props.data.description,\r\n                            price: item.data.price + (props.data.price * parseInt(amountInput.current.value))\r\n\r\n                        }\r\n                        return {data : props.data ,amount : (parseInt(amountInput.current.value) + item.amount)}\r\n                    }\r\n                    else\r\n                    {\r\n                        return item;\r\n                    }\r\n                })\r\n                setCart(newCart)\r\n            }\r\n            else{\r\n            addItem({data : props.data,amount : parseInt(amountInput.current.value)})\r\n            }\r\n            amountInput.current.value = \"\";\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <Fragment>\r\n            <div className ={classes.form}>\r\n            <form onSubmit ={handleSubmit}>\r\n                <label htmlFor ='amount'>{props.label}</label>\r\n                <input id ='amount' ref ={amountInput} ></input>\r\n               <button className ={classes.button} type = \"submit\">{props.btnLabel}</button>\r\n            </form>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default MealForm;"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,UAAU,EAAGC,MAAM,QAAQ,OAAO;AACpD,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,WAAW,MAAM,eAAe;AAAA;AACvC,MAAMC,QAAQ,GAAGC,KAAK,IACtB;EAAA;EAEI,MAAM;IAACC,IAAI;IAACC,OAAO;IAACC;EAAO,CAAC,GAAGR,UAAU,CAACG,WAAW,CAAC;EACtD,MAAMM,WAAW,GAAGR,MAAM,EAAE;EAE5B,MAAMS,YAAY,GAAIC,KAAK,IAC3B;IACIA,KAAK,CAACC,cAAc,EAAE;IACtB,IAAGH,WAAW,CAACI,OAAO,CAACC,KAAK,KAAK,GAAG,EACpC;MACI,IAAIC,QAAQ,GAAG,KAAK;MAEpBT,IAAI,CAACU,GAAG,CAAEC,IAAI,IACd;QACI,IAAGA,IAAI,CAACC,IAAI,CAACC,IAAI,KAAKd,KAAK,CAACa,IAAI,CAACC,IAAI,EACrC;UACIJ,QAAQ,GAAG,IAAI;UACf;QACJ;QACA;MACJ,CAAC,CAAC;MACF,IAAGA,QAAQ,EACX;QACI,IAAIK,OAAO,GAAGd,IAAI,CAACU,GAAG,CAAEC,IAAI,IAAI;UAC5B,IAAGA,IAAI,CAACC,IAAI,CAACC,IAAI,KAAKd,KAAK,CAACa,IAAI,CAACC,IAAI,EACrC;YACI,IAAID,IAAI,GAAE;cACNG,EAAE,EAAEhB,KAAK,CAACa,IAAI,CAACG,EAAE;cACjBF,IAAI,EAAEd,KAAK,CAACa,IAAI,CAACC,IAAI;cACrBG,WAAW,EAACjB,KAAK,CAACa,IAAI,CAACI,WAAW;cAClCC,KAAK,EAAEN,IAAI,CAACC,IAAI,CAACK,KAAK,GAAIlB,KAAK,CAACa,IAAI,CAACK,KAAK,GAAGC,QAAQ,CAACf,WAAW,CAACI,OAAO,CAACC,KAAK;YAEnF,CAAC;YACD,OAAO;cAACI,IAAI,EAAGb,KAAK,CAACa,IAAI;cAAEO,MAAM,EAAID,QAAQ,CAACf,WAAW,CAACI,OAAO,CAACC,KAAK,CAAC,GAAGG,IAAI,CAACQ;YAAO,CAAC;UAC5F,CAAC,MAED;YACI,OAAOR,IAAI;UACf;QACJ,CAAC,CAAC;QACFT,OAAO,CAACY,OAAO,CAAC;MACpB,CAAC,MACG;QACJb,OAAO,CAAC;UAACW,IAAI,EAAGb,KAAK,CAACa,IAAI;UAACO,MAAM,EAAGD,QAAQ,CAACf,WAAW,CAACI,OAAO,CAACC,KAAK;QAAC,CAAC,CAAC;MACzE;MACAL,WAAW,CAACI,OAAO,CAACC,KAAK,GAAG,EAAE;IAClC;EACJ,CAAC;EAED,oBACI,QAAC,QAAQ;IAAA,uBACL;MAAK,SAAS,EAAGZ,OAAO,CAACwB,IAAK;MAAA,uBAC9B;QAAM,QAAQ,EAAGhB,YAAa;QAAA,wBAC1B;UAAO,OAAO,EAAE,QAAQ;UAAA,UAAEL,KAAK,CAACsB;QAAK;UAAA;UAAA;UAAA;QAAA,QAAS,eAC9C;UAAO,EAAE,EAAE,QAAQ;UAAC,GAAG,EAAGlB;QAAY;UAAA;UAAA;UAAA;QAAA,QAAU,eACjD;UAAQ,SAAS,EAAGP,OAAO,CAAC0B,MAAO;UAAC,IAAI,EAAG,QAAQ;UAAA,UAAEvB,KAAK,CAACwB;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAU;MAAA;QAAA;QAAA;QAAA;MAAA;IACzE;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACC;AAEnB,CAAC;AAAA,GA7DKzB,QAAQ;AAAA,KAARA,QAAQ;AA+Dd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}